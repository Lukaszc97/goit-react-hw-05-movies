{"version":3,"file":"static/js/186.10587b4b.chunk.js","mappings":"gNAuCA,UApCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAoBC,EAAAA,EAAAA,cAAW,iBAAC,+GAEXC,MAAM,sCAAD,OAAuCP,EAAvC,sDAFM,WAE5BQ,EAF4B,QAGpBC,GAHoB,sBAI1B,IAAIC,MAAM,+BAJgB,uBAMfF,EAASG,OANM,OAM5BC,EAN4B,OAOlCR,EAAWQ,EAAKC,SAPkB,kDASlCC,QAAQC,MAAR,MATkC,0DAWnC,CAACf,IAMJ,OAJAgB,EAAAA,EAAAA,YAAU,WACRX,GACD,GAAE,CAACA,KAGF,4BACE,qCACA,wBACGF,EAAQc,KAAI,SAACC,GAAD,OACX,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADL,QASpB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const fetchMovieReviews = useCallback(async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=6259da9bc5df5d51756d5e5542429946`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReviews(data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieReviews();\n  }, [fetchMovieReviews]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","fetchMovieReviews","useCallback","fetch","response","ok","Error","json","data","results","console","error","useEffect","map","review","author","content","id"],"sourceRoot":""}