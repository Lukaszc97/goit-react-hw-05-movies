{"version":3,"file":"static/js/186.792a0d44.chunk.js","mappings":"yNAyCA,UApCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAkBC,EAAAA,EAAAA,cAAW,iBAAC,8GAEPC,EAAAA,EAAAA,IAAkBP,GAFX,OAE1BQ,EAF0B,OAGhCJ,EAAWI,GAHqB,gDAKhCC,QAAQC,MAAR,MALgC,yDAOjC,CAACV,IAMJ,OAJAW,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,CAACA,KAGF,4BACE,qCACA,wBACGF,EAAQS,KAAI,SAACC,GAAD,OACX,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADL,QASpB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieReviews } from '../../Service/api'; \n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const getMovieReviews = useCallback(async () => {\n    try {\n      const reviewData = await fetchMovieReviews(movieId);\n      setReviews(reviewData);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getMovieReviews();\n  }, [getMovieReviews]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","getMovieReviews","useCallback","fetchMovieReviews","reviewData","console","error","useEffect","map","review","author","content","id"],"sourceRoot":""}