{"version":3,"file":"static/js/151.713bbfee.chunk.js","mappings":"wNAwEA,UApEA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAmBC,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,oFAE7BA,EAF6B,iCAGPC,EAAAA,EAAAA,IAAaD,GAHN,OAGzBE,EAHyB,OAI/BR,EAAiBQ,GAJc,sBAO/BR,EAAiB,IAPc,yDAUjCS,QAAQC,MAAR,MAViC,0DAAD,sDAYjC,KAEHC,EAAAA,EAAAA,YAAU,WACR,IACMC,EADS,IAAIC,gBAAgBX,GACdY,IAAI,SAErBF,IACFd,EAAcc,GACdR,EAAiBQ,GAEpB,GAAE,CAACV,EAAcE,KAElBO,EAAAA,EAAAA,YAAU,WAERP,EAAiBP,EAClB,GAAE,CAACO,EAAkBP,IAEtB,IAAMkB,EAAoB,WACxB,IAAMC,EAAS,IAAIH,gBACnBG,EAAOC,IAAI,QAASpB,GACpBM,EAAgBa,EACjB,EAQD,OACE,4BACE,2CACA,kBACEE,KAAK,OACLC,YAAY,uBACZC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAAcwB,EAAEC,OAAOH,MAA9B,EACVI,UAdgB,SAACF,GACP,UAAVA,EAAEG,KACJV,GAEH,KAYG,mBAAQW,QAASX,EAAjB,qBACA,wBACGhB,EAAc4B,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADE,QAQ1B,C","sources":["Page/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../Service/api';\n\nfunction Movies() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchMoviesData = useCallback(async (term) => {\n    try {\n      if (term) {\n        const movieData = await searchMovies(term);\n        setSearchResults(movieData);\n      } else {\n       \n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const params = new URLSearchParams(searchParams);\n    const query = params.get('query');\n\n    if (query) {\n      setSearchTerm(query);\n      searchMoviesData(query);\n    }\n  }, [searchParams, searchMoviesData]);\n\n  useEffect(() => {\n\n    searchMoviesData(searchTerm);\n  }, [searchMoviesData, searchTerm]);\n\n  const handleSearchClick = () => {\n    const params = new URLSearchParams();\n    params.set('query', searchTerm);\n    setSearchParams(params);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSearchClick(); \n    }\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSearchClick}>Search</button>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["useState","searchTerm","setSearchTerm","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","searchMoviesData","useCallback","term","searchMovies","movieData","console","error","useEffect","query","URLSearchParams","get","handleSearchClick","params","set","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","map","movie","to","id","title"],"sourceRoot":""}