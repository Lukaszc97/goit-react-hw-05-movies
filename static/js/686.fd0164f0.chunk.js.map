{"version":3,"file":"static/js/686.fd0164f0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Page/MovieDetails/MovieDetails.module.css?8114","Page/MovieDetails/MovieDetails.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__2A4Jm\",\"boxContainer\":\"MovieDetails_boxContainer__RInSK\",\"posterContainer\":\"MovieDetails_posterContainer__TN1QW\",\"contentContainer\":\"MovieDetails_contentContainer__jSz4g\",\"buttonsContainer\":\"MovieDetails_buttonsContainer__w8EJ1\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport styles from './MovieDetails.module.css';\nimport PropTypes from 'prop-types';\nimport { fetchMovieDetails } from '../../Service/api';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const [posterUrl, setPosterUrl] = useState('');\n  const navigate = useNavigate(); \n  const location = useLocation();\n\n\n  const searchQuery = new URLSearchParams(location.search).get('query');\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n    setShowReviews(false);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n    setShowCast(false);\n  };\n\n  const fetchMovieDetailsData = useCallback(async () => {\n    try {\n      const data = await fetchMovieDetails(movieId);\n      setMovieDetails(data);\n\n      if (data.poster_path) {\n        setPosterUrl(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieDetailsData();\n  }, [movieId, fetchMovieDetailsData]);\n\n  const goBack = () => {\n\n    sessionStorage.setItem('lastSearchQuery', searchQuery);\n\n   \n    navigate(-1);\n  };\n\n  if (!movieDetails || Object.keys(movieDetails).length === 0) {\n    return <div>Film nie istnieje.</div>;\n  }\n\n  return (\n    <div className={styles.movieDetailsContainer}>\n      <button onClick={goBack}>BACK</button>\n\n      <div className={styles.boxContainer}>\n        {posterUrl && (\n          <img\n            src={posterUrl}\n            width=\"150px\"\n            alt={`${movieDetails.title} Poster`}\n            className={styles.posterContainer}\n          />\n        )}\n        <div className={styles.contentContainer}>\n          <h2>Movie Details</h2>\n          <h3>Title: {movieDetails.title}</h3>\n          <p>Release Date: {movieDetails.release_date}</p>\n          <p>Overview: {movieDetails.overview}</p>\n        </div>\n      </div>\n\n      <div className={styles.buttonsContainer}>\n        <button onClick={toggleCast}>Toggle Cast</button>\n        <button onClick={toggleReviews}>Toggle Reviews</button>\n      </div>\n\n      {showCast && <Cast />}\n      {showReviews && <Reviews />}\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieDetails;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieCast } from '../../Service/api'; \n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const castData = await fetchMovieCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieReviews } from '../../Service/api'; \n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const getMovieReviews = useCallback(async () => {\n    try {\n      const reviewData = await fetchMovieReviews(movieId);\n      setReviews(reviewData);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getMovieReviews();\n  }, [getMovieReviews]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","showCast","setShowCast","showReviews","setShowReviews","posterUrl","setPosterUrl","navigate","useNavigate","location","useLocation","searchQuery","URLSearchParams","search","get","fetchMovieDetailsData","useCallback","fetchMovieDetails","data","poster_path","console","error","useEffect","Object","keys","length","className","styles","onClick","sessionStorage","setItem","src","width","alt","title","release_date","overview","Cast","Reviews","cast","setCast","getCast","fetchMovieCast","castData","map","actor","name","id","reviews","setReviews","getMovieReviews","fetchMovieReviews","reviewData","review","author","content"],"sourceRoot":""}